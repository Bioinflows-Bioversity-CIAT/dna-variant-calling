.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "BioPerl 3"
.TH BioPerl 3 "2021-02-03" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
BioPerl \- Perl modules for biology
.SH "VERSION"
.IX Header "VERSION"
version 1.7.8
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
If you're new to BioPerl, you should start reading the BioPerl \s-1HOWTO\s0's:
.PP
<http://bioperl.org/howtos/index.html>
.SS "References for Individual Modules"
.IX Subsection "References for Individual Modules"
For ease of maintenance and coordination amongst contributors, BioPerl
code is maintained in a modular form, as is the documentation.  Refer to
the documentation for individual modules by using perldoc, i.e.
.PP
\&\f(CW\*(C`perldoc Bio::Seq\*(C'\fR
.PP
to get documentation for the Bio::Seq object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
BioPerl is the product of a community effort to produce Perl code which is
useful in biology. Examples include Sequence objects, Alignment objects and
database searching objects. These objects not only do what they are advertised
to do in the documentation, but they also interact \- Alignment objects are made
from the Sequence objects, Sequence objects have access to Annotation and
SeqFeature objects and databases, Blast objects can be converted to Alignment
objects, and so on. This means that the objects provide a coordinated and
extensible framework to do computational biology.
.PP
BioPerl development focuses on Perl classes, or code that is used to create
objects representing biological entities. There are scripts provided in the
scripts/ and examples/ directories but scripts are not the main focus of the
BioPerl developers. Of course, as the objects do most of the hard work for you,
all you have to do is combine a number of objects together sensibly to make
useful scripts.
.PP
The intent of the BioPerl development effort is to make reusable tools that aid
people in creating their own sites or job-specific applications.
.PP
The BioPerl website at <http://bioperl.org> also attempts to maintain links
and archives of standalone bio-related Perl tools that are not affiliated or
related to the core BioPerl effort. Check the site for useful code ideas and
contribute your own if possible.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
The BioPerl modules are distributed as a tar file that expands into a standard
perl \s-1CPAN\s0 distribution. Detailed installation directions can be found in the
distribution \s-1INSTALL\s0 file. Installing on windows using ActiveState Perl is
covered in the \s-1INSTALL.WIN\s0 file.  We highly suggest reading the installation
instructions on the BioPerl website:
.PP
<http://bioperl.org/INSTALL.html>
.PP
Note that only the following are supported at this time with the current \s-1API:\s0
.IP "BioPerl-db" 3
.IX Item "BioPerl-db"
.PD 0
.IP "BioPerl-network" 3
.IX Item "BioPerl-network"
.IP "BioPerl-run" 3
.IX Item "BioPerl-run"
.IP "BioPerl-pedigree" 3
.IX Item "BioPerl-pedigree"
.IP "Bio::Graphics" 3
.IX Item "Bio::Graphics"
.PD
.SH "GETTING STARTED"
.IX Header "GETTING STARTED"
The distribution \fIscripts/\fR directory has working scripts for use with BioPerl,
check the self-described \fIexamples/\fR directory as well. You are more than
welcome to contribute your script!
.PP
If you have installed BioPerl in the standard way, as detailed in the \s-1INSTALL\s0 in
the distribution, these scripts should work by just running them.
.SH "GETTING INVOLVED"
.IX Header "GETTING INVOLVED"
BioPerl is a completely open community of developers. We are not funded and we
don't have a mission statement. We encourage collaborative code, in particular
in Perl. You can help us in many different ways, from just a simple statement
about how you have used BioPerl to doing something interesting to contributing a
whole new object hierarchy. See <http://bioperl.org> for more information. Here
are some ways of helping us:
.SS "Asking questions and telling us you used it"
.IX Subsection "Asking questions and telling us you used it"
We are very interested to hear how you experienced using BioPerl. Did it install
cleanly? Did you understand the documentation? Could you get the objects to do
what you wanted them to do? If BioPerl was useless we want to know why, and if
it was great \- that too. Post a message to \fBbioperl\-l@bioperl.org\fR, the BioPerl
mailing list, where all the developers are.
.PP
Only by getting people's feedback do we know whether we are providing anything
useful.
.SS "Writing a script that uses it"
.IX Subsection "Writing a script that uses it"
By writing a good script that uses BioPerl you both show that BioPerl is useful
and probably save someone elsewhere writing it. If you contribute it to the
\&'script central' at <http://bioperl.org> then other people can view and use it.
Don't be nervous if you've never done this sort of work, advice is freely given
and all are welcome!
.SS "Find bugs!"
.IX Subsection "Find bugs!"
We know that there are bugs in this code. If you find something which you are pretty
sure is a problem, post a bug report using our Bugzilla tracking system:
.PP
<https://github.com/bioperl/bioperl\-live/issues>
.PP
Please read the main bug tracking (<http://www.bioperl.org/articles/Bugs.html>) for an
overview of what we expect in a bug report. Specifically, having a code and
data example where appropriate helps tremendously.  We gladly accept all patches
after a quick code review.
.SS "Suggest new functionality"
.IX Subsection "Suggest new functionality"
You can suggest areas where the objects are not ideally written and could be
done better. The best way is to find the main developer of the module (each
module was written principally by one person, except for Seq.pm). Talk to him or
her and suggest changes.
.SS "Make your own objects"
.IX Subsection "Make your own objects"
If you can make a useful object we will happily include it into the core.
Probably you will want to read a lot of the documentation in Bio::Root::Root
and talk to people on the BioPerl mailing list, \fBbioperl\-l@bioperl.org\fR.
.SS "Writing documentation"
.IX Subsection "Writing documentation"
We appreciate good documentation. It's what tells the world what's in BioPerl,
it's what instructs the user, it's what describes the rationale and inner
workings of the package. Feel free to contribute.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
For a more detailed history of the BioPerl project, we recommend the History of
BioPerl:
.PP
<http://bioperl.org/articles/History_of_BioPerl.html>
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing lists"
.IX Subsection "Mailing lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org               \- General discussion
\&  https://bioperl.org/Support.html    \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
\&\fIbioperl\-l@bioperl.org\fR
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting bugs"
.IX Subsection "Reporting bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
See the individual modules for their authors.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This software is copyright (c) by many people (see the individual modules for their copyright holders).
.PP
This software is available under the same terms as the perl 5 programming language system itself.
