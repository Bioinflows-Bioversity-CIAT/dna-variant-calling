.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "BP_REVTRANS-MOTIF 1"
.TH BP_REVTRANS-MOTIF 1 "2021-02-03" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bp_revtrans\-motif \- Reverse translate a Profam\-like protein motif
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
From a file:
.PP
.Vb 1
\&    bp_revtrans\-motif.pl \-i motifs.txt
.Ve
.PP
Using pipes:
.PP
.Vb 1
\&   bp_revtrans\-motif.pl < motifs.txt > output.txt
.Ve
.PP
Using interactively at the command prompt:
.PP
.Vb 5
\&   $ bp_revtrans\-motif.pl
\&   MAAEEL[VIKP]
\&   1.   ATGGCNGCNGARGARYTNVHN
\&   [^P]H(IW){2,3}
\&   2.   NDNCAY(ATHTGG){2,3}
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script takes a protein motif as input and returns a degenerate
oligonucleotide sequence corresponding to it. The main reason for doing this
is to design degenerate primers that amplify a given sequence pattern.
.PP
The input motif consists of a string of one-letter residues, with any of
the following syntactic elements:
.IP "\fB[...]\fR : Redundant position." 4
.IX Item "[...] : Redundant position."
A position in which more than one residue is allowed. Example:
.Sp
.Vb 2
\&    [TS]YW[RKSD]
\&     ^^    ^^^^
.Ve
.IP "\fB[^...]\fR : Negated position." 4
.IX Item "[^...] : Negated position."
A position in which any residue is allowed, saved for those between
brackets. Example:
.Sp
.Vb 2
\&    [^PW]MK[LAE]
\&      ^^
.Ve
.IP "\fB(...){n,m,...}\fR : Repeated motif." 4
.IX Item "(...){n,m,...} : Repeated motif."
A motif that is repeated \fBn\fR or \fBm\fR times. It can have any of the previous
syntactic elements. Example:
.Sp
.Vb 2
\&    A[SN]C(TXX){2,4,8}
\&           ^^^
.Ve
.PP
The allowed letters are those that correspond to the 20 natural aminoacids,
plus:
.PP
.Vb 3
\&    B = N + D
\&    Z = Q + E
\&    X = All
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "\fB\-i input-file\fP:"
.IX Subsection "-i input-file:"
A file with a list of motifs to reverse translate.
.SS "\fB\-h\fP"
.IX Subsection "-h"
Display this help message.
.SH "AUTHOR"
.IX Header "AUTHOR"
Bruno Vecchi, \f(CW\*(C`vecchi.b at gmail.com\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`vecchi.b at gmail.com\*(C'\fR
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Bruno Vecchi, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
