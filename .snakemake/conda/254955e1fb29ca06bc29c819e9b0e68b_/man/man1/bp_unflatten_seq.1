.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "BP_UNFLATTEN_SEQ 1"
.TH BP_UNFLATTEN_SEQ 1 "2021-02-03" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bp_unflatten_seq \- unflatten a genbank or genbank\-style feature file into
a nested SeqFeature hierarchy
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  bp_unflatten_seq.PLS \-e 3 \-gff ~/cvs/bioperl\-live/t/data/AE003644_Adh\-genomic.gb
\&
\&  bp_unflatten_seq.PLS \-\-detail ~/cvs/bioperl\-live/t/data/AE003644_Adh\-genomic.gb
\&
\&  bp_unflatten_seq.PLS \-i foo.embl \-\-from embl \-\-to chadoxml \-o out.chado.xml
\&
\&  bp_unflatten_seq.PLS \-\-notypemap \-\-detail \-\-to asciitree \-ethresh 2 AE003644_Adh\-genomic.gb
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script will \fBunflatten\fR a genbank or genbank-style file of
SeqFeatures into a nested hierarchy.
.PP
See Bio::SeqFeature::Tools::Unflattener
.PP
In a GenBank/EMBL representation, features are 'flat' \- for example,
there is no link between an mRNA and a \s-1CDS,\s0 other than implicit links
(eg via tags or via splice site coordinates) which may be hard to code
for.
.PP
This is most easily illustrated with the default output format,
\&\fBasciitree\fR
.PP
An unflattened genbank feature set may look like this (\s-1AB077698\s0)
.PP
.Vb 10
\&  Seq: AB077698
\&    databank_entry                                   1..2701[+]
\&    gene                                             
\&      mRNA                                           
\&        CDS hCHCR\-G                                  80..1144[+]
\&        exon                                         80..1144[+]
\&      five_prime_UTR                                 1..79[+]
\&      located_sequence_feature                       137..196[+]
\&      located_sequence_feature                       239..292[+]
\&      located_sequence_feature                       617..676[+]
\&      located_sequence_feature                       725..778[+]
\&      three_prime_UTR                                1145..2659[+]
\&      polyA_site                                     1606..1606[+]
\&      polyA_site                                     2660..2660[+]
.Ve
.PP
Or like this (portion of \s-1AE003734\s0)
.PP
.Vb 10
\&  gene                                             
\&    mRNA CG3320\-RA                                 
\&      CDS CG3320\-PA                                53126..54971[\-]
\&      exon                                         52204..53323[\-]
\&      exon                                         53404..53631[\-]
\&      exon                                         53688..53735[\-]
\&      exon                                         53798..53918[\-]
\&      exon                                         54949..55287[\-]
\&    mRNA CG3320\-RB                                 
\&      CDS CG3320\-PB                                53383..54971[\-]
\&      exon                                         52204..53631[\-]
\&      exon                                         53688..53735[\-]
\&      exon                                         53798..53918[\-]
\&      exon                                         54949..55287[\-]
.Ve
.PP
The unflattening will also 'normalize' the containment hierarchy (in
the sense of standardising it \- e.g. making sure there is always a
transcript record, even if genbank just specifies \s-1CDS\s0 and gene)
.PP
By default, the GenBank types will be mapped to \s-1SO\s0 types
.PP
See Bio::SeqFeature::Tools::TypeMapper
.SH "COMMAND LINE ARGUMENTS"
.IX Header "COMMAND LINE ARGUMENTS"
.IP "\-i|input \s-1FILE\s0" 4
.IX Item "-i|input FILE"
input file (can also be specified as last argument)
.IP "\-from \s-1FORMAT\s0" 4
.IX Item "-from FORMAT"
input format (defaults to genbank)
.Sp
probably doesn't make so much sense to use this for non-flat formats;
ie other than embl/genbank
.IP "\-to \s-1FORMAT\s0" 4
.IX Item "-to FORMAT"
output format (defaults to asciitree)
.Sp
should really be a format that is nested SeqFeature aware; I think
this is only asciitree, chadoxml and gff3
.IP "\-gff" 4
.IX Item "-gff"
with export to \s-1GFF3\s0 format (pre\-3 GFFs make no sense with unflattened
sequences, as they have no set way of representing feature graphs)
.IP "\-o|output \s-1FILE\s0" 4
.IX Item "-o|output FILE"
outfile defaults to \s-1STDOUT\s0
.IP "\-detail" 4
.IX Item "-detail"
show extra detail on features (asciitree mode only)
.IP "\-e|ethresh \s-1INT\s0" 4
.IX Item "-e|ethresh INT"
sets the error threshold on unflattening
.Sp
by default this script will throw a wobbly if it encounters weird
stuff in the genbank file \- raise the error threshold to signal these
to be ignored (and reported on \s-1STDERR\s0)
.IP "\-nomagic" 4
.IX Item "-nomagic"
suppress use_magic in unflattening (see
Bio::SeqFeature::Tools::Unflattener
.IP "\-notypemap" 4
.IX Item "-notypemap"
suppress type mapping (see
Bio::SeqFeature::Tools::TypeMapper
.SH "TODO"
.IX Header "TODO"
Bio::SeqFeature::Tools::Unflattener allows fine-grained control
over the unflattening process \- need to add more options to allow this
control at the command line
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via
email or the web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\& Chris Mungall E<lt>cjm\-at\-bioperl.orgE<gt>
.Ve
