.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "BP_MASK_BY_SEARCH 1"
.TH BP_MASK_BY_SEARCH 1 "2021-02-03" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bp_mask_by_search \- mask sequence(s) based on its alignment results
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  bp_mask_by_search.pl \-f blast genomefile blastfile.bls > maskedgenome.fa
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mask sequence based on significant alignments of another sequence.
You need to provide the report file and the entire sequence data which
you want to mask.  By default this will assume you have done a \s-1TBLASTN\s0
(or \s-1TFASTY\s0) and try and mask the hit sequence assuming you've provided
the sequence file for the hit database.  If you would like to do the
reverse and mask the query sequence specify the \-t/\-\-type query flag.
.PP
This is going to read in the whole sequence file into memory so for
large genomes this may fall over.  I'm using DB_File to prevent
keeping everything in memory, one solution is to split the genome into
pieces (\s-1BEFORE\s0 you run the \s-1DB\s0 search though, you want to use the exact
file you BLASTed with as input to this program).
.PP
Below the double dash (\-\-) options are of the form
\&\-\-format=fasta or \-\-format fasta
or you can just say
\&\-f fasta
.PP
By \-f/\-\-format I mean either are acceptable options.  The =s or =n
or =c specify these arguments expect a 'string'
.PP
Options:
    \-f/\-\-format=s    Search report format (fasta,blast,axt,hmmer,etc)
    \-sf/\-\-sformat=s  Sequence format (fasta,genbank,embl,swissprot)
    \-\-hardmask       (booelean) Hard mask the sequence
                     with the maskchar [default is lowercase mask]
    \-\-maskchar=c     Character to mask with [default is N], change 
                     to 'X' for protein sequences
    \-e/\-\-evalue=n    Evalue cutoff for HSPs and Hits, only 
                     mask sequence if alignment has specified evalue 
                     or better
    \-o/\-\-out/
    \-\-outfile=file   Output file to save the masked sequence to.
    \-t/\-\-type=s      Alignment seq type you want to mask, the 
                     'hit' or the 'query' sequence. [default is 'hit']
    \-\-minlen=n       Minimum length of an \s-1HSP\s0 for it to be used 
                     in masking [default 0]
    \-h/\-\-help        See this help information
.SH "AUTHOR \- Jason Stajich"
.IX Header "AUTHOR - Jason Stajich"
Jason Stajich, jason-at-bioperl-dot-org.
